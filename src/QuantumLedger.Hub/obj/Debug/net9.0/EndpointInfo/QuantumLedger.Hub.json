{
  "openapi": "3.0.4",
  "info": {
    "title": "QuantumLedger API",
    "description": "Multi-cloud account management and blockchain transaction API with post-quantum cryptography support",
    "contact": {
      "name": "QuantumLedger Team",
      "email": "support@quantumledger.com"
    },
    "version": "v1"
  },
  "paths": {
    "/api/accounts": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create a new account with multi-cloud key storage",
        "description": "Creates a new account with external owner ID mapping and multi-algorithm key generation",
        "operationId": "CreateAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "List accounts with pagination",
        "description": "Retrieves a paginated list of accounts with optional filtering",
        "operationId": "ListAccounts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorSystem",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListAccountsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account details by ID",
        "description": "Retrieves account information including public keys and metadata",
        "operationId": "GetAccount",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/external/{externalOwnerId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account by external owner ID",
        "description": "Retrieves account information using external owner ID and vendor system",
        "operationId": "GetAccountByExternalOwnerId",
        "parameters": [
          {
            "name": "externalOwnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorSystem",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}/status": {
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Update account status",
        "description": "Updates the status of an account (Active, Suspended, Closed)",
        "operationId": "UpdateAccountStatus",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAccountStatusRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}/keys": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account cryptographic keys",
        "description": "Retrieves public keys and key metadata for an account",
        "operationId": "GetAccountKeys",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountKeysResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}/keys/rotate": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Rotate account cryptographic keys",
        "description": "Generates new keys for an account and updates the public key registry",
        "operationId": "RotateAccountKeys",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateKeysRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RotateKeysResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}/stats": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get account usage statistics",
        "description": "Retrieves usage statistics and metrics for an account",
        "operationId": "GetAccountStats",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountStatsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/accounts/{accountId}/verify": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Verify a signature for an account",
        "description": "Verifies a digital signature using the account's public keys",
        "operationId": "VerifyAccountSignature",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySignatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignatureVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/generate": {
      "post": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Generate a new substitution key pair",
        "description": "Creates a new substitution key pair for user-controlled delegation",
        "operationId": "GenerateSubstitutionKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateSubstitutionKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenerateSubstitutionKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/validate": {
      "post": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Validate a substitution key",
        "description": "Validates that a substitution key is active and not expired",
        "operationId": "ValidateSubstitutionKey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateSubstitutionKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateSubstitutionKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/{substitutionKeyId}": {
      "get": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Get substitution key information",
        "description": "Retrieves public information about a substitution key",
        "operationId": "GetSubstitutionKeyInfo",
        "parameters": [
          {
            "name": "substitutionKeyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/{substitutionKeyId}/revoke": {
      "post": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Revoke a substitution key",
        "description": "Revokes a substitution key, making it invalid for future use",
        "operationId": "RevokeSubstitutionKey",
        "parameters": [
          {
            "name": "substitutionKeyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RevokeSubstitutionKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevokeSubstitutionKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/account/{address}": {
      "get": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "List substitution keys for an account",
        "description": "Retrieves all substitution keys associated with an account address",
        "operationId": "ListAccountSubstitutionKeys",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListSubstitutionKeysResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/{address}/rotate": {
      "post": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Rotate a substitution key",
        "description": "Creates a new substitution key and marks the old one as deprecated",
        "operationId": "RotateSubstitutionKey",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RotateSubstitutionKeyRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RotateSubstitutionKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/verify-signature": {
      "post": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Verify a signature made with a substitution key",
        "description": "Verifies a digital signature using a substitution key",
        "operationId": "VerifySubstitutionKeySignature",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VerifySubstitutionKeySignatureRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeySignatureVerificationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/substitution-keys/{substitutionKeyId}/stats": {
      "get": {
        "tags": [
          "Substitution Keys"
        ],
        "summary": "Get substitution key usage statistics",
        "description": "Retrieves usage statistics and metrics for a substitution key",
        "operationId": "GetSubstitutionKeyStats",
        "parameters": [
          {
            "name": "substitutionKeyId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyStatsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubstitutionKeyErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Transfer funds between accounts",
        "description": "Transfers funds from one account to another with signature verification",
        "operationId": "TransferFunds",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers/batch": {
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Execute batch transfers",
        "description": "Executes multiple transfers in a single atomic operation",
        "operationId": "BatchTransfer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchTransferRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchTransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transfers/{transferId}": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Get transfer status",
        "description": "Retrieves the current status of a transfer operation",
        "operationId": "GetTransferStatus",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transfers"
        ],
        "summary": "Cancel a pending transfer",
        "description": "Cancels a pending transfer if possible",
        "operationId": "CancelTransfer",
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransferResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/balances/{accountId}": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get account balance",
        "description": "Retrieves the current balance for an account",
        "operationId": "GetAccountBalanceByGuid",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "currency",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/balances/{accountId}/transactions": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get transaction history",
        "description": "Retrieves transaction history for an account with pagination",
        "operationId": "GetTransactionHistory",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionHistoryResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/balances/{accountId}/pending": {
      "get": {
        "tags": [
          "Balances"
        ],
        "summary": "Get pending transactions",
        "description": "Retrieves pending transactions for an account",
        "operationId": "GetPendingTransactions",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PendingTransactionsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/balances/{accountId}/adjust": {
      "post": {
        "tags": [
          "Balances"
        ],
        "summary": "Adjust account balance",
        "description": "Performs administrative balance adjustments",
        "operationId": "AdjustBalance",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BalanceAdjustmentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceAdjustmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Submit a new transaction",
        "description": "Submits a transaction using the existing CQRS infrastructure",
        "operationId": "SubmitTransactionLegacy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LegacyTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/{transactionId}": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Get transaction details",
        "description": "Retrieves details for a specific transaction using CQRS",
        "operationId": "GetTransactionDetails",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Transactions"
        ],
        "summary": "Cancel a pending transaction",
        "description": "Cancels a pending transaction if possible",
        "operationId": "CancelTransaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "reason",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CancelTransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/create": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Create a new transaction",
        "description": "Creates a new transaction with modern request structure",
        "operationId": "CreateTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/validate": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Validate a transaction",
        "description": "Validates a transaction without executing it",
        "operationId": "ValidateTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ledger/transactions": {
      "post": {
        "tags": [
          "Ledger"
        ],
        "summary": "Submit a new transaction",
        "description": "Processes a new transaction request using CQRS pattern",
        "operationId": "SubmitTransaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ledger/transactions/{id}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get transaction by ID",
        "description": "Retrieves transaction details by transaction ID",
        "operationId": "GetTransaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTransactionResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ledger/accounts/{address}": {
      "get": {
        "tags": [
          "Ledger"
        ],
        "summary": "Get account balance by blockchain address",
        "description": "Retrieves account balance using blockchain address",
        "operationId": "GetAccountBalance",
        "parameters": [
          {
            "name": "address",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAccountBalanceResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/statistics": {
      "get": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Get cache performance statistics",
        "description": "Retrieves detailed cache performance metrics including hit ratio, response times, and request counts",
        "operationId": "GetCacheStatistics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatisticsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/health": {
      "get": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Get cache health status",
        "description": "Checks cache health and provides performance recommendations",
        "operationId": "GetCacheHealth",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheHealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/clear": {
      "delete": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Clear all cached public keys",
        "description": "Clears all cached public keys - use with caution in production",
        "operationId": "ClearCache",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearCacheResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/clear/{keyHash}": {
      "delete": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Clear a specific cached public key",
        "description": "Removes a specific public key from cache by its hash",
        "operationId": "ClearSpecificKey",
        "parameters": [
          {
            "name": "keyHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearKeyResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/clear/account/{accountId}": {
      "delete": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Clear all cached keys for an account",
        "description": "Removes all cached public keys associated with a specific account",
        "operationId": "ClearAccountKeys",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClearAccountKeysResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/cache/warmup": {
      "post": {
        "tags": [
          "Cache Management"
        ],
        "summary": "Warm up the cache",
        "description": "Pre-loads frequently accessed public keys into cache",
        "operationId": "WarmupCache",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarmupCacheResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountBalance": {
        "required": [
          "address",
          "balance",
          "lastUpdated"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "balance": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "solidState": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "AccountKeysResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            },
            "nullable": true
          },
          "totalKeys": {
            "type": "integer",
            "format": "int32"
          },
          "activeKeys": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "AccountResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "externalOwnerId": {
            "type": "string",
            "nullable": true
          },
          "vendorSystem": {
            "type": "string",
            "nullable": true
          },
          "ownerType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusUpdatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "statusUpdatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AccountStatsResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "periodDays": {
            "type": "integer",
            "format": "int32"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "totalSignatures": {
            "type": "integer",
            "format": "int32"
          },
          "signaturesByAlgorithm": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          },
          "averageTransactionsPerDay": {
            "type": "number",
            "format": "double"
          },
          "lastTransactionAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mostUsedAlgorithm": {
            "type": "string",
            "nullable": true
          },
          "securityScore": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "AccountSummary": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "externalOwnerId": {
            "type": "string",
            "nullable": true
          },
          "vendorSystem": {
            "type": "string",
            "nullable": true
          },
          "ownerType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastActivity": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BalanceAdjustmentRequest": {
        "required": [
          "accountId",
          "adjustmentType",
          "amount",
          "currency",
          "reason"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "minLength": 1,
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "adjustmentType": {
            "minLength": 1,
            "type": "string"
          },
          "reason": {
            "minLength": 1,
            "type": "string"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "adminUserId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BalanceAdjustmentResponse": {
        "type": "object",
        "properties": {
          "adjustmentId": {
            "type": "string",
            "format": "uuid"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "adjustmentType": {
            "type": "string",
            "nullable": true
          },
          "previousBalance": {
            "type": "number",
            "format": "double"
          },
          "newBalance": {
            "type": "number",
            "format": "double"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "adminUserId": {
            "type": "string",
            "nullable": true
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BalanceResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CurrencyBalance"
            },
            "nullable": true
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "totalValueUSD": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "BatchTransferRequest": {
        "required": [
          "transfers"
        ],
        "type": "object",
        "properties": {
          "transfers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferRequest"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "atomicExecution": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "BatchTransferResponse": {
        "type": "object",
        "properties": {
          "batchId": {
            "type": "string",
            "format": "uuid"
          },
          "totalTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "successfulTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "failedTransfers": {
            "type": "integer",
            "format": "int32"
          },
          "totalAmount": {
            "type": "number",
            "format": "double"
          },
          "totalFees": {
            "type": "number",
            "format": "double"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchTransferResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BatchTransferResult": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "fromAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "blockHash": {
            "type": "string",
            "nullable": true
          },
          "transactionFee": {
            "type": "number",
            "format": "double"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CacheHealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "nullable": true
          },
          "hitRatio": {
            "type": "number",
            "format": "double"
          },
          "averageResponseTimeMs": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int64"
          },
          "issues": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "lastChecked": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CacheStatisticsResponse": {
        "type": "object",
        "properties": {
          "hitCount": {
            "type": "integer",
            "format": "int64"
          },
          "missCount": {
            "type": "integer",
            "format": "int64"
          },
          "hitRatio": {
            "type": "number",
            "format": "double"
          },
          "totalRequests": {
            "type": "integer",
            "format": "int64"
          },
          "averageResponseTimeMs": {
            "type": "number",
            "format": "double"
          },
          "cachedItemCount": {
            "type": "integer",
            "format": "int64"
          },
          "lastResetTime": {
            "type": "string",
            "format": "date-time"
          },
          "uptimeHours": {
            "type": "number",
            "format": "double"
          },
          "performance": {
            "type": "string",
            "nullable": true
          },
          "recommendations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CancelTransactionResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "cancelledAt": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "refundAmount": {
            "type": "number",
            "format": "double"
          },
          "refundFee": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ClearAccountKeysResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "clearedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ClearCacheResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "itemsCleared": {
            "type": "integer",
            "format": "int64"
          },
          "clearedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ClearKeyResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "keyHash": {
            "type": "string",
            "nullable": true
          },
          "clearedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "CreateAccountRequest": {
        "required": [
          "externalOwnerId",
          "ownerType",
          "vendorSystem"
        ],
        "type": "object",
        "properties": {
          "externalOwnerId": {
            "minLength": 1,
            "type": "string"
          },
          "ownerIdType": {
            "type": "string",
            "nullable": true
          },
          "vendorSystem": {
            "minLength": 1,
            "type": "string"
          },
          "ownerType": {
            "minLength": 1,
            "type": "string"
          },
          "internalReferenceId": {
            "type": "string",
            "nullable": true
          },
          "preferredCloudProviders": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "requiredAlgorithms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateAccountResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "externalOwnerId": {
            "type": "string",
            "nullable": true
          },
          "vendorSystem": {
            "type": "string",
            "nullable": true
          },
          "internalReferenceId": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CreateTransactionRequest": {
        "required": [
          "accountId",
          "amount",
          "type"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "minLength": 1,
            "type": "string"
          },
          "amount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CurrencyBalance": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "nullable": true
          },
          "available": {
            "type": "number",
            "format": "double"
          },
          "pending": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateSubstitutionKeyRequest": {
        "required": [
          "address"
        ],
        "type": "object",
        "properties": {
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenerateSubstitutionKeyResponse": {
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "privateKey": {
            "type": "string",
            "nullable": true
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "securityNotice": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetAccountBalanceResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "balance": {
            "$ref": "#/components/schemas/AccountBalance"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GetTransactionResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transaction": {
            "$ref": "#/components/schemas/Request"
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "KeyInfo": {
        "type": "object",
        "properties": {
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "cloudProvider": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LegacyTransactionRequest": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "fromAddress": {
            "type": "string",
            "nullable": true
          },
          "toAddress": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ListAccountsResponse": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountSummary"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ListSubstitutionKeysResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "keys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubstitutionKeyInfoResponse"
            },
            "nullable": true
          },
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PendingTransactionsResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "pendingTransactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            },
            "nullable": true
          },
          "totalPending": {
            "type": "integer",
            "format": "int32"
          },
          "totalPendingAmount": {
            "type": "number",
            "format": "double"
          },
          "oldestPendingAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "ProcessTransactionResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "transactionId": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tableName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "classicSignature": {
            "type": "string",
            "nullable": true
          },
          "quantumSignature": {
            "type": "string",
            "nullable": true
          },
          "classicKeyId": {
            "type": "string",
            "nullable": true
          },
          "quantumKeyId": {
            "type": "string",
            "nullable": true
          },
          "solidState": {
            "type": "boolean"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "RevokeSubstitutionKeyRequest": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RevokeSubstitutionKeyResponse": {
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "revokedAt": {
            "type": "string",
            "format": "date-time"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateKeysRequest": {
        "type": "object",
        "properties": {
          "algorithms": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "requestedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateKeysResponse": {
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "newKeys": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyInfo"
            },
            "nullable": true
          },
          "rotatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "rotatedBy": {
            "type": "string",
            "nullable": true
          },
          "previousKeysStatus": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateSubstitutionKeyRequest": {
        "type": "object",
        "properties": {
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RotateSubstitutionKeyResponse": {
        "type": "object",
        "properties": {
          "oldSubstitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "newSubstitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "newPublicKey": {
            "type": "string",
            "nullable": true
          },
          "newPrivateKey": {
            "type": "string",
            "nullable": true
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "rotatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "newExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "oldKeyStatus": {
            "type": "string",
            "nullable": true
          },
          "securityNotice": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SignatureVerificationResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "publicKeyUsed": {
            "type": "string",
            "nullable": true
          },
          "verificationTimeMs": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SubstitutionKeyErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "nullable": true
          },
          "errorDescription": {
            "type": "string",
            "nullable": true
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubstitutionKeyInfoResponse": {
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "publicKey": {
            "type": "string",
            "nullable": true
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "expiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "usageCount": {
            "type": "integer",
            "format": "int32"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "isExpired": {
            "type": "boolean"
          },
          "remainingDays": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SubstitutionKeySignatureVerificationResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "algorithm": {
            "type": "string",
            "nullable": true
          },
          "verifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errorCode": {
            "type": "string",
            "nullable": true
          },
          "errorMessage": {
            "type": "string",
            "nullable": true
          },
          "authenticatedAddress": {
            "type": "string",
            "nullable": true
          },
          "verificationTimeMs": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "SubstitutionKeyStatsResponse": {
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "periodDays": {
            "type": "integer",
            "format": "int32"
          },
          "totalSignatures": {
            "type": "integer",
            "format": "int32"
          },
          "totalTransactions": {
            "type": "integer",
            "format": "int32"
          },
          "averageSignaturesPerDay": {
            "type": "number",
            "format": "double"
          },
          "lastUsed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "mostActiveDay": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "securityScore": {
            "type": "number",
            "format": "double"
          },
          "usagePattern": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionHistoryResponse": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionSummary"
            },
            "nullable": true
          },
          "totalVolume": {
            "type": "number",
            "format": "double"
          },
          "totalFees": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TransactionResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "fromAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blockHash": {
            "type": "string",
            "nullable": true
          },
          "blockNumber": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "transactionFee": {
            "type": "number",
            "format": "double"
          },
          "gasUsed": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "gasPrice": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "confirmations": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "metadata": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionSummary": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "fromAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "blockHash": {
            "type": "string",
            "nullable": true
          },
          "transactionFee": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "TransferRequest": {
        "required": [
          "amount",
          "fromAccountId",
          "toAccountId"
        ],
        "type": "object",
        "properties": {
          "fromAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransferResponse": {
        "type": "object",
        "properties": {
          "transactionId": {
            "type": "string",
            "format": "uuid"
          },
          "fromAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "blockHash": {
            "type": "string",
            "nullable": true
          },
          "transactionFee": {
            "type": "number",
            "format": "double"
          },
          "processedAt": {
            "type": "string",
            "format": "date-time"
          },
          "confirmationNumber": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateAccountStatusRequest": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "minLength": 1,
            "type": "string"
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateSubstitutionKeyRequest": {
        "required": [
          "substitutionKeyId"
        ],
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "ValidateSubstitutionKeyResponse": {
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "type": "string",
            "nullable": true
          },
          "isValid": {
            "type": "boolean"
          },
          "validatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateTransactionRequest": {
        "required": [
          "accountId",
          "amount"
        ],
        "type": "object",
        "properties": {
          "accountId": {
            "type": "string",
            "format": "uuid"
          },
          "amount": {
            "minimum": 0.01,
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "toAccountId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "isValid": {
            "type": "boolean"
          },
          "validationErrors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "warnings": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "estimatedFee": {
            "type": "number",
            "format": "double"
          },
          "estimatedGas": {
            "type": "integer",
            "format": "int64"
          },
          "estimatedProcessingTime": {
            "type": "string",
            "format": "date-span"
          },
          "validatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "VerifySignatureRequest": {
        "required": [
          "algorithm",
          "message",
          "signature"
        ],
        "type": "object",
        "properties": {
          "algorithm": {
            "minLength": 1,
            "type": "string"
          },
          "signature": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "nonce": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "VerifySubstitutionKeySignatureRequest": {
        "required": [
          "message",
          "signature",
          "substitutionKeyId"
        ],
        "type": "object",
        "properties": {
          "substitutionKeyId": {
            "minLength": 1,
            "type": "string"
          },
          "message": {
            "minLength": 1,
            "type": "string"
          },
          "signature": {
            "minLength": 1,
            "type": "string"
          },
          "nonce": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WarmupCacheResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "keysLoaded": {
            "type": "integer",
            "format": "int32"
          },
          "warmupTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "SignatureAuth": {
        "type": "apiKey",
        "description": "Digital signature for request authentication using post-quantum cryptography",
        "name": "X-Signature",
        "in": "header"
      }
    }
  }
}