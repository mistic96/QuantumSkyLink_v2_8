[
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "IsUserSecurityComplianceValid",
    "RelativePath": "api/Security/compliance",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetUserSecurityEvents",
    "RelativePath": "api/Security/events",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventType",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "severity",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "fromDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "toDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SecurityService.Data.Entities.SecurityEvent, SecurityService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ResolveSecurityEvent",
    "RelativePath": "api/Security/events/{eventId}/resolve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "eventId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.ResolveSecurityEventRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetCriticalSecurityEvents",
    "RelativePath": "api/Security/events/critical",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "fromDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "toDate",
        "Type": "System.Nullable\u00601[[System.DateTime, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[SecurityService.Data.Entities.SecurityEvent, SecurityService, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GenerateBackupCodes",
    "RelativePath": "api/Security/mfa/backup-codes",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ValidateBackupCode",
    "RelativePath": "api/Security/mfa/backup-codes/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.ValidateBackupCodeRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GenerateMfaToken",
    "RelativePath": "api/Security/mfa/generate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.GenerateMfaTokenRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.String",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "InvalidateUserMfaTokens",
    "RelativePath": "api/Security/mfa/invalidate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.InvalidateMfaTokensRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ValidateMfaToken",
    "RelativePath": "api/Security/mfa/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Models.Requests.ValidateMfaRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ApproveMultiSigRequest",
    "RelativePath": "api/Security/multisig/approve",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Models.Requests.ApproveMultiSigRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.MultiSignatureResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ExecuteMultiSigRequest",
    "RelativePath": "api/Security/multisig/execute/{requestId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.MultiSignatureResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "CreateMultiSigRequest",
    "RelativePath": "api/Security/multisig/requests",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Models.Requests.CreateMultiSigRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.MultiSignatureResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetUserMultiSigRequests",
    "RelativePath": "api/Security/multisig/requests",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "status",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.MultiSignatureListResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetMultiSigRequest",
    "RelativePath": "api/Security/multisig/requests/{requestId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "requestId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.MultiSignatureResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ValidateMultiSigRequirement",
    "RelativePath": "api/Security/multisig/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.ValidateMultiSigRequirementRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "CreateSecurityPolicy",
    "RelativePath": "api/Security/policies",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Models.Requests.CreateSecurityPolicyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.SecurityPolicyResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetUserSecurityPolicies",
    "RelativePath": "api/Security/policies",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "page",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "pageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.SecurityPolicyListResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetSecurityPolicy",
    "RelativePath": "api/Security/policies/{policyId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "policyId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.SecurityPolicyResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "UpdateSecurityPolicy",
    "RelativePath": "api/Security/policies/{policyId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "policyId",
        "Type": "System.Guid",
        "IsRequired": true
      },
      {
        "Name": "request",
        "Type": "SecurityService.Models.Requests.CreateSecurityPolicyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "SecurityService.Models.Responses.SecurityPolicyResponse",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "DeleteSecurityPolicy",
    "RelativePath": "api/Security/policies/{policyId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "policyId",
        "Type": "System.Guid",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ValidateSecurityPolicy",
    "RelativePath": "api/Security/policies/validate",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.ValidateSecurityPolicyRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "GetUserSecurityStatus",
    "RelativePath": "api/Security/status",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.Dictionary\u00602[[System.String, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.Object, System.Private.CoreLib, Version=9.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "SecurityService.Controllers.SecurityController",
    "Method": "ValidateUserAccess",
    "RelativePath": "api/Security/validate/access",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "request",
        "Type": "SecurityService.Controllers.ValidateUserAccessRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Boolean",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  }
]